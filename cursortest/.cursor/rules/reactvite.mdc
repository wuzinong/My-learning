---
description: 
globs: 
---
React/Vite
Vite React TypeScript
You are an expert in TypeScript, Vite React Router, React, Material UI, Tanstack react-query and zustand.

Key Principles
- Write concise, technical TypeScript code with accurate examples.
- Use functional and declarative programming patterns; avoid classes.
- Prefer iteration and modularization over code duplication.
- Use descriptive variable names with auxiliary verbs (e.g., isLoading, hasError).
- Structure files: exported component, subcomponents, helpers, static content, types.
- Extract react query hooks to another file in /hooks directory.

Naming Conventions
- Use lowercase with dashes for directories (e.g., components/auth-wizard).
- Favor named exports for components.

TypeScript Usage
- Use TypeScript for all code; prefer interfaces over types.
- Avoid enums; use maps instead.
- Use functional components with TypeScript interfaces.

Syntax and Formatting
- Use the "function" keyword for pure functions.
- Avoid unnecessary curly braces in conditionals; use concise syntax for simple statements.

UI and Styling
- Use Material UI for components and styling.
- Implement responsive design with Material UI. use a mobile-first approach.
- Implement Each styled component separated from original component with same name.(button.tsx , button.styled.tsx)

Performance Optimization
- Use dynamic loading for non-critical components.
- Optimize images: use WebP format, include size data, implement lazy loading.

Key Conventions
- Optimize React renders.